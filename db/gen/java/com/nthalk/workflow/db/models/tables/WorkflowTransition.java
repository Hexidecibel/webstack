/*
 * This file is generated by jOOQ.
 */
package com.nthalk.workflow.db.models.tables;


import com.nthalk.workflow.db.models.Indexes;
import com.nthalk.workflow.db.models.Keys;
import com.nthalk.workflow.db.models.Public;
import com.nthalk.workflow.db.models.tables.records.WorkflowTransitionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkflowTransition extends TableImpl<WorkflowTransitionRecord> {

    private static final long serialVersionUID = 1974571965;

    /**
     * The reference instance of <code>PUBLIC.WORKFLOW_TRANSITION</code>
     */
    public static final WorkflowTransition WORKFLOW_TRANSITION = new WorkflowTransition();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowTransitionRecord> getRecordType() {
        return WorkflowTransitionRecord.class;
    }

    /**
     * The column <code>PUBLIC.WORKFLOW_TRANSITION.WORKFLOW_TRANSITION_ID</code>.
     */
    public final TableField<WorkflowTransitionRecord, Integer> WORKFLOW_TRANSITION_ID = createField("WORKFLOW_TRANSITION_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>PUBLIC.WORKFLOW_TRANSITION.WORKFLOW_ID</code>.
     */
    public final TableField<WorkflowTransitionRecord, Integer> WORKFLOW_ID = createField("WORKFLOW_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.WORKFLOW_TRANSITION.NAME</code>.
     */
    public final TableField<WorkflowTransitionRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(2147483647), this, "");

    /**
     * The column <code>PUBLIC.WORKFLOW_TRANSITION.FROM_WORKFLOW_STATE_ID</code>.
     */
    public final TableField<WorkflowTransitionRecord, Integer> FROM_WORKFLOW_STATE_ID = createField("FROM_WORKFLOW_STATE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>PUBLIC.WORKFLOW_TRANSITION.TO_WORKFLOW_STATE_ID</code>.
     */
    public final TableField<WorkflowTransitionRecord, Integer> TO_WORKFLOW_STATE_ID = createField("TO_WORKFLOW_STATE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>PUBLIC.WORKFLOW_TRANSITION</code> table reference
     */
    public WorkflowTransition() {
        this(DSL.name("WORKFLOW_TRANSITION"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.WORKFLOW_TRANSITION</code> table reference
     */
    public WorkflowTransition(String alias) {
        this(DSL.name(alias), WORKFLOW_TRANSITION);
    }

    /**
     * Create an aliased <code>PUBLIC.WORKFLOW_TRANSITION</code> table reference
     */
    public WorkflowTransition(Name alias) {
        this(alias, WORKFLOW_TRANSITION);
    }

    private WorkflowTransition(Name alias, Table<WorkflowTransitionRecord> aliased) {
        this(alias, aliased, null);
    }

    private WorkflowTransition(Name alias, Table<WorkflowTransitionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WorkflowTransition(Table<O> child, ForeignKey<O, WorkflowTransitionRecord> key) {
        super(child, key, WORKFLOW_TRANSITION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CONSTRAINT_INDEX_4, Indexes.CONSTRAINT_INDEX_48, Indexes.CONSTRAINT_INDEX_48B, Indexes.PRIMARY_KEY_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WorkflowTransitionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WORKFLOW_TRANSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WorkflowTransitionRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WorkflowTransitionRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowTransitionRecord>>asList(Keys.CONSTRAINT_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WorkflowTransitionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WorkflowTransitionRecord, ?>>asList(Keys.CONSTRAINT_48, Keys.CONSTRAINT_48B, Keys.CONSTRAINT_48B9);
    }

    public Workflow workflow() {
        return new Workflow(this, Keys.CONSTRAINT_48);
    }

    public WorkflowState constraint_48b() {
        return new WorkflowState(this, Keys.CONSTRAINT_48B);
    }

    public WorkflowState constraint_48b9() {
        return new WorkflowState(this, Keys.CONSTRAINT_48B9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkflowTransition as(String alias) {
        return new WorkflowTransition(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WorkflowTransition as(Name alias) {
        return new WorkflowTransition(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowTransition rename(String name) {
        return new WorkflowTransition(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WorkflowTransition rename(Name name) {
        return new WorkflowTransition(name, null);
    }
}

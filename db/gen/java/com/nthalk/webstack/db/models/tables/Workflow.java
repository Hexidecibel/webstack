/*
 * This file is generated by jOOQ.
 */
package com.nthalk.webstack.db.models.tables;


import com.nthalk.webstack.db.models.DefaultSchema;
import com.nthalk.webstack.db.models.Indexes;
import com.nthalk.webstack.db.models.Keys;
import com.nthalk.webstack.db.models.tables.records.WorkflowRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Workflow extends TableImpl<WorkflowRecord> {

    private static final long serialVersionUID = 1378737343;

    /**
     * The reference instance of <code>workflow</code>
     */
    public static final Workflow WORKFLOW = new Workflow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkflowRecord> getRecordType() {
        return WorkflowRecord.class;
    }

    /**
     * The column <code>workflow.workflow_id</code>.
     */
    public final TableField<WorkflowRecord, Integer> WORKFLOW_ID = createField("workflow_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('workflow_workflow_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>workflow.name</code>.
     */
    public final TableField<WorkflowRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.instance_table</code>.
     */
    public final TableField<WorkflowRecord, String> INSTANCE_TABLE = createField("instance_table", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.instance_state_field</code>.
     */
    public final TableField<WorkflowRecord, String> INSTANCE_STATE_FIELD = createField("instance_state_field", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>workflow.instance_key_field</code>.
     */
    public final TableField<WorkflowRecord, String> INSTANCE_KEY_FIELD = createField("instance_key_field", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>workflow</code> table reference
     */
    public Workflow() {
        this(DSL.name("workflow"), null);
    }

    /**
     * Create an aliased <code>workflow</code> table reference
     */
    public Workflow(String alias) {
        this(DSL.name(alias), WORKFLOW);
    }

    /**
     * Create an aliased <code>workflow</code> table reference
     */
    public Workflow(Name alias) {
        this(alias, WORKFLOW);
    }

    private Workflow(Name alias, Table<WorkflowRecord> aliased) {
        this(alias, aliased, null);
    }

    private Workflow(Name alias, Table<WorkflowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Workflow(Table<O> child, ForeignKey<O, WorkflowRecord> key) {
        super(child, key, WORKFLOW);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WORKFLOW_NAME_KEY, Indexes.WORKFLOW_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<WorkflowRecord, Integer> getIdentity() {
        return Keys.IDENTITY_WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WorkflowRecord> getPrimaryKey() {
        return Keys.WORKFLOW_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WorkflowRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkflowRecord>>asList(Keys.WORKFLOW_PKEY, Keys.WORKFLOW_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Workflow as(String alias) {
        return new Workflow(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Workflow as(Name alias) {
        return new Workflow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Workflow rename(String name) {
        return new Workflow(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Workflow rename(Name name) {
        return new Workflow(name, null);
    }
}
